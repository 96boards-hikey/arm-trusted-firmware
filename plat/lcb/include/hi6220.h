/*
 * Copyright (c) 2014, Hisilicon Ltd.
 * Copyright (c) 2014, Linaro Ltd.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * Neither the name of ARM nor the names of its contributors may be used
 * to endorse or promote products derived from this software without specific
 * prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef __HI6220_H__
#define __HI6220_H__

#define ACPU_CTRL_BASE				0xf6504000
#define ACPU_SC_CPU_CTRL			(ACPU_CTRL_BASE + 0x000)
#define ACPU_SC_CPU_STAT			(ACPU_CTRL_BASE + 0x008)
#define ACPU_SC_VD_CTRL				(ACPU_CTRL_BASE + 0x054)
#define ACPU_SC_VD_MASK_PATTERN_CTRL		(ACPU_CTRL_BASE + 0x058)
#define ACPU_SC_VD_DLY_FIXED_CTRL		(ACPU_CTRL_BASE + 0x05c)
#define ACPU_SC_VD_DLY_TABLE0_CTRL		(ACPU_CTRL_BASE + 0x060)
#define ACPU_SC_VD_DLY_TABLE1_CTRL		(ACPU_CTRL_BASE + 0x064)
#define ACPU_SC_VD_DLY_TABLE2_CTRL		(ACPU_CTRL_BASE + 0x068)
#define ACPU_SC_VD_HPM_CTRL			(ACPU_CTRL_BASE + 0x06c)

#define ACPU_SC_CPU_STAT_CLKDIV_VD_MASK		(3 << 20)

#define ACPU_SC_VD_CTRL_TUNE_EN_DIF		(1 << 0)
#define ACPU_SC_VD_CTRL_TUNE_EN_INT		(1 << 11)
#define ACPU_SC_VD_CTRL_SHIFT_TABLE0_MASK	(0xf << 12)
#define ACPU_SC_VD_CTRL_FORCE_CLK_EN		(1 << 28)

#define ACPU_SC_VD_MASK_PATTERN			((1 << 13) - 1)

#define ACPU_SC_VD_HPM_CTRL_OSC_DIV_MASK	0xffff
#define ACPU_SC_VD_HPM_CTRL_DLY_EXP_MASK	(0xffffff << 8)

#define PERI_BASE				0xf7030000
#define PERI_SC_PERIPH_CTRL2			(PERI_BASE + 0x004)
#define PERI_SC_PERIPH_CTRL4			(PERI_BASE + 0x00c)
#define PERI_SC_PERIPH_CTRL5			(PERI_BASE + 0x010)
#define PERI_SC_PERIPH_CTRL8			(PERI_BASE + 0x018)
#define PERI_SC_PERIPH_CTRL13			(PERI_BASE + 0x028)
#define PERI_SC_PERIPH_CTRL14			(PERI_BASE + 0x02c)
#define PERI_SC_DDR_CTRL0			(PERI_BASE + 0x050)
#define PERI_SC_PERIPH_STAT1			(PERI_BASE + 0x094)
#define PERI_SC_PERIPH_CLKEN0			(PERI_BASE + 0x200)
#define PERI_SC_PERIPH_CLKDIS0			(PERI_BASE + 0x204)
#define PERI_SC_PERIPH_CLKSTAT0			(PERI_BASE + 0x208)
#define PERI_SC_PERIPH_CLKEN8			(PERI_BASE + 0x240)
#define PERI_SC_PERIPH_CLKEN12			(PERI_BASE + 0x270)
#define PERI_SC_PERIPH_RSTEN0			(PERI_BASE + 0x300)
#define PERI_SC_PERIPH_RSTDIS0			(PERI_BASE + 0x304)
#define PERI_SC_PERIPH_RSTSTAT0			(PERI_BASE + 0x308)
#define PERI_SC_PERIPH_RSTDIS8			(PERI_BASE + 0x344)
#define PERI_SC_CLK_SEL0			(PERI_BASE + 0x400)
#define PERI_SC_CLKCFG8BIT1			(PERI_BASE + 0x494)

#define PCLK_TIMER1				(1 << 16)
#define PCLK_TIMER0				(1 << 15)

#define PERIPH_CTRL4_OTG_PHY_SEL		(1 << 21)
#define PERIPH_CTRL4_PICO_VBUSVLDEXTSEL		(1 << 11)
#define PERIPH_CTRL4_PICO_VBUSVLDEXT		(1 << 10)
#define PERIPH_CTRL4_PICO_SIDDQ			(1 << 6)
#define PERIPH_CTRL4_FPGA_EXT_PHY_SEL		(1 << 3)

#define PERIPH_CTRL5_PICOPHY_BC_MODE		(1 << 5)

#define PERIPH_CTRL14_FM_CLK_SEL_SHIFT		8
#define PERIPH_CTRL14_FM_EN			(1 << 0)

#define PERI_CLK_USBOTG				(1 << 4)
#define PERI_CLK_MMC2				(1 << 2)
#define PERI_CLK_MMC1				(1 << 1)
#define PERI_CLK_MMC0				(1 << 0)

#define PERI_RST_USBOTG_32K			(1 << 7)
#define PERI_RST_USBOTG				(1 << 6)
#define PERI_RST_PICOPHY			(1 << 5)
#define PERI_RST_USBOTG_BUS			(1 << 4)
#define PERI_RST_MMC2				(1 << 2)
#define PERI_RST_MMC1				(1 << 1)
#define PERI_RST_MMC0				(1 << 0)

#define PMCTRL_BASE				0xf7032000
#define PMCTRL_ACPUPLLCTRL			(PMCTRL_BASE + 0x000)
#define PMCTRL_ACPUPLLFREQ			(PMCTRL_BASE + 0x004)
#define PMCTRL_DDRPLL1CTRL			(PMCTRL_BASE + 0x010)
#define PMCTRL_DDRPLL0CTRL			(PMCTRL_BASE + 0x030)
#define PMCTRL_ACPUPLLSEL			(PMCTRL_BASE + 0x100)
#define PMCTRL_ACPUCLKDIV			(PMCTRL_BASE + 0x104)
#define PMCTRL_ACPUSYSPLLCFG			(PMCTRL_BASE + 0x110)
#define PMCTRL_ACPUCLKOFFCFG			(PMCTRL_BASE + 0x114)
#define PMCTRL_ACPUPLLFRAC			(PMCTRL_BASE + 0x134)
#define PMCTRL_ACPUPMUVOLUPTIME			(PMCTRL_BASE + 0x360)
#define PMCTRL_ACPUPMUVOLDNTIME			(PMCTRL_BASE + 0x364)
#define PMCTRL_ACPUVOLPMUADDR			(PMCTRL_BASE + 0x368)
#define PMCTRL_ACPUVOLUPSTEP			(PMCTRL_BASE + 0x36c)
#define PMCTRL_ACPUVOLDNSTEP			(PMCTRL_BASE + 0x370)
#define PMCTRL_ACPUDFTVOL			(PMCTRL_BASE + 0x374)
#define PMCTRL_ACPUDESTVOL			(PMCTRL_BASE + 0x378)
#define PMCTRL_ACPUVOLTTIMEOUT			(PMCTRL_BASE + 0x37c)

#define PMCTRL_ACPUPLLCTRL_EN_CFG		(1 << 0)

#define PMCTRL_ACPUCLKDIV_CPUEXT_CFG_MASK	(3 << 0)
#define PMCTRL_ACPUCLKDIV_DDR_CFG_MASK		(3 << 8)
#define PMCTRL_ACPUCLKDIV_CPUEXT_STAT_MASK	(3 << 16)
#define PMCTRL_ACPUCLKDIV_DDR_STAT_MASK		(3 << 24)

#define PMCTRL_ACPUPLLSEL_ACPUPLL_CFG		(1 << 0)
#define PMCTRL_ACPUPLLSEL_ACPUPLL_STAT		(1 << 1)
#define PMCTRL_ACPUPLLSEL_SYSPLL_STAT		(1 << 2)

#define PMCTRL_ACPUSYSPLL_CLKDIV_CFG_MASK	0x7
#define PMCTRL_ACPUSYSPLL_CLKEN_CFG		(1 << 4)
#define PMCTRL_ACPUSYSPLL_CLKDIV_SW		(3 << 12)

#define PMCTRL_ACPUSYSPLLCFG_SYSPLL_CLKEN	(1 << 4)
#define PMCTRL_ACPUSYSPLLCFG_CLKDIV_MASK	(3 << 12)

#define PMCTRL_ACPUDESTVOL_DEST_VOL_MASK	0x7f
#define PMCTRL_ACPUDESTVOL_CURR_VOL_MASK	(0x7f << 8)

#define MMC0_BASE				0xf723d000

#define AO_CTRL_BASE				0xf7800000
#define AO_SC_SYS_CTRL0				(AO_CTRL_BASE + 0x000)
#define AO_SC_SYS_STAT1				(AO_CTRL_BASE + 0x014)
#define AO_SC_MCU_SUBSYS_CTRL3			(AO_CTRL_BASE + 0x40c)
#define AO_SC_PERIPH_CLKEN4			(AO_CTRL_BASE + 0x630)
#define AO_SC_PERIPH_CLKDIS4			(AO_CTRL_BASE + 0x634)
#define AO_SC_PERIPH_CLKSTAT4			(AO_CTRL_BASE + 0x638)
#define AO_SC_PERIPH_CLKEN5			(AO_CTRL_BASE + 0x63c)
#define AO_SC_PERIPH_RSTEN4			(AO_CTRL_BASE + 0x6f0)
#define AO_SC_PERIPH_RSTDIS4			(AO_CTRL_BASE + 0x6f4)
#define AO_SC_PERIPH_RSTSTAT4			(AO_CTRL_BASE + 0x6f8)
#define AO_SC_ECONUM				(AO_CTRL_BASE + 0xf00)
#define AO_SC_TIMER_EN0				(AO_CTRL_BASE + 0x1d0)
#define AO_SC_TIMER_EN1				(AO_CTRL_BASE + 0x1d4)

#define AO_SC_SYS_CTRL0_MODE_NORMAL		0x004
#define AO_SC_SYS_CTRL0_MODE_MASK		0x007

#define AO_SC_MCU_SUBSYS_CTRL3_RCLK_3		0x003
#define AO_SC_MCU_SUBSYS_CTRL3_RCLK_MASK	0x007

#define AO_SC_PERIPH_CLKEN4_PMUSSI		(1 << 27)

#define AO_SC_PERIPH_CLKEN5_PMUSSI_CCPU		(1 << 0)
#define AO_SC_PERIPH_CLKEN5_PMUSSI_MCU		(1 << 16)

#define PMUSSI_BASE				0xf8000000

#define TIMER0_BASE				0xf8008000
#define TIMER00_LOAD				(TIMER0_BASE + 0x000)
#define TIMER00_VALUE				(TIMER0_BASE + 0x004)
#define TIMER00_CONTROL				(TIMER0_BASE + 0x008)
#define TIMER00_BGLOAD				(TIMER0_BASE + 0x018)

#define GPIO0_BASE				0xf8011000
#define GPIO1_BASE				0xf8012000
#define GPIO2_BASE				0xf8013000
#define GPIO3_BASE				0xf8014000
#define GPIO4_BASE				0xf7020000
#define GPIO5_BASE				0xf7021000
#define GPIO6_BASE				0xf7022000
#define GPIO7_BASE				0xf7023000
#define GPIO8_BASE				0xf7024000
#define GPIO9_BASE				0xf7025000
#define GPIO10_BASE				0xf7026000
#define GPIO11_BASE				0xf7027000
#define GPIO12_BASE				0xf7028000
#define GPIO13_BASE				0xf7029000
#define GPIO14_BASE				0xf702a000
#define GPIO15_BASE				0xf702b000
#define GPIO16_BASE				0xf702c000
#define GPIO17_BASE				0xf702d000
#define GPIO18_BASE				0xf702e000
#define GPIO19_BASE				0xf702f000

#define GPIO_DIR				0x400

#endif	/* __HI6220_H__ */
